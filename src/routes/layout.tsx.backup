import { component$, Slot } from "@builder.io/qwik"
import { routeLoader$, type RequestEventLoader } from "@builder.io/qwik-city"
import Sidebar from "../components/Sidebar"
import Header from "../components/Header"
import { createServerSupabaseClient } from "../lib/supabase"
import type { AuthLoaderData } from "../lib/types"

// Server Loader para obtener la sesión de autenticación
export const useAuthLoader = routeLoader$<AuthLoaderData>(async (requestEvent: RequestEventLoader) => {
  // No verificar autenticación en rutas de auth para evitar bucles
  const url = new URL(requestEvent.request.url)
  if (url.pathname.startsWith('/login') || url.pathname.startsWith('/register')) {
    return { session: null, user: null, error: null }
  }
  
  const supabase = createServerSupabaseClient(requestEvent.request)
  
  try {
    const { data: { session }, error } = await supabase.auth.getSession()
    
    if (error) {
      console.error('Auth error:', error)
      // Redirigir al login si hay error de autenticación
      throw requestEvent.redirect(302, '/login')
    }
    
    if (!session?.user) {
      // Si no hay sesión, redirigir al login
      throw requestEvent.redirect(302, '/login')
    }
    
    return { 
      session: session, 
      user: session.user,
      error: null 
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error('Unexpected auth error:', error)
      throw requestEvent.redirect(302, '/login')
    }
    throw error // Re-throw redirect
  }
})

export default component$(() => {
  const authData = useAuthLoader()
  
  // Si es una ruta de auth, renderizar el slot directamente (el layout de auth maneja esto)
  if (!authData.value.session && !authData.value.user) {
    return <Slot />
  }

  return (
    <div class="flex min-h-screen bg-gray-100">
      <Sidebar />
      <div class="flex-1 flex flex-col">
        <Header user={authData.value.user}>
          <span q:slot="title">CRM Dashboard</span>
        </Header>
        <main class="flex-1 p-8">
          <Slot />
        </main>
      </div>
    </div>
  )
})
